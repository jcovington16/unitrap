export declare const placeholderRegExp: RegExp;
interface SQL {
    toSQL: () => string;
}
export type BaseType = string | boolean | number | bigint | Uint8Array | null | undefined | Date | SQL | Record<string, any>;
export type ValuesType = BaseType | BaseType[] | Record<string, BaseType>;
export interface Parameters {
    anon: BaseType[];
    named?: Record<string, BaseType>;
}
export declare function getParameters(...values: ValuesType[]): Parameters;
export declare function bindValues(sql: string, parameters?: Parameters): string;
export {};
//# sourceMappingURL=binding.d.ts.map